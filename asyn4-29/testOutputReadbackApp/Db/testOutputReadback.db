###################################################################
#  Records that use devAsynInt32                                  #
###################################################################

record(ao, "$(P)AoInt32")
{
   field(PINI, "$(PINI)")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))INT32_VALUE")
}

record(ao, "$(P)AoInt32RB")
{
   field(PINI, "$(PINI)")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))INT32_VALUE")
   info(asyn:READBACK,"1")
}

record(ai, "$(P)AiInt32")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))INT32_VALUE")
   field(SCAN, "$(SCAN)")
}

record(longout, "$(P)LongoutInt32")
{
   field(PINI, "$(PINI)")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))INT32_VALUE")
}

record(longout, "$(P)LongoutInt32RB")
{
   field(PINI, "$(PINI)")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))INT32_VALUE")
   info(asyn:READBACK,"1")
}

record(longin, "$(P)LonginInt32")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))INT32_VALUE")
   field(SCAN, "$(SCAN)")
}

record(bo, "$(P)BoInt32")
{
   field(PINI, "$(PINI)")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BINARY_INT32_VALUE")
   field(ZNAM, "Zero")
   field(ONAM, "One")
}

record(bo, "$(P)BoInt32RB")
{
   field(PINI, "$(PINI)")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BINARY_INT32_VALUE")
   field(ZNAM, "Zero")
   field(ONAM, "One")
   info(asyn:READBACK,"1")
}

record(bi, "$(P)BiInt32")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BINARY_INT32_VALUE")
   field(ZNAM, "Zero")
   field(ONAM, "One")
   field(SCAN, "$(SCAN)")
}

record(mbbo, "$(P)MbboInt32")
{
   field(PINI, "$(PINI)")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MULTIBIT_INT32_VALUE")
   field(ZRST, "State 0")
   field(ZRVL, "0")
   field(ONST, "State 1")
   field(ONVL, "1")
   field(TWST, "State 2")
   field(TWVL, "2")
   field(THST, "State 3")
   field(THVL, "3")
   field(FRST, "State 4")
   field(FRVL, "4")
   field(FVST, "State 5")
   field(FVVL, "5")
}

record(mbbo, "$(P)MbboInt32RB")
{
   field(PINI, "$(PINI)")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MULTIBIT_INT32_VALUE")
   field(ZRST, "State 0")
   field(ZRVL, "0")
   field(ONST, "State 1")
   field(ONVL, "1")
   field(TWST, "State 2")
   field(TWVL, "2")
   field(THST, "State 3")
   field(THVL, "3")
   field(FRST, "State 4")
   field(FRVL, "4")
   field(FVST, "State 5")
   field(FVVL, "5")
   info(asyn:READBACK,"1")
}

record(mbbi, "$(P)MbbiInt32")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MULTIBIT_INT32_VALUE")
   field(ZRST, "State 0")
   field(ZRVL, "0")
   field(ONST, "State 1")
   field(ONVL, "1")
   field(TWST, "State 2")
   field(TWVL, "2")
   field(THST, "State 3")
   field(THVL, "3")
   field(FRST, "State 4")
   field(FRVL, "4")
   field(FVST, "State 5")
   field(FVVL, "5")
   field(SCAN, "$(SCAN)")
}


###################################################################
#  Records that use devAsynUInt32Digital                          #
###################################################################

record(longout, "$(P)LongoutUInt32D")
{
   field(PINI, "$(PINI)")
   field(DTYP, "asynUInt32Digital")
   field(OUT,  "@asynMask($(PORT),$(ADDR),0xFFFFFFFF, $(TIMEOUT))UINT32D_VALUE")
}

record(longout, "$(P)LongoutUInt32DRB")
{
   field(PINI, "$(PINI)")
   field(DTYP, "asynUInt32Digital")
   field(OUT,  "@asynMask($(PORT),$(ADDR),0xFFFFFFFF, $(TIMEOUT))UINT32D_VALUE")
   info(asyn:READBACK,"1")
}

record(longin, "$(P)LonginUInt32D")
{
   field(DTYP, "asynUInt32Digital")
   field(INP,  "@asynMask($(PORT),$(ADDR),0xFFFFFFFF, $(TIMEOUT))UINT32D_VALUE")
   field(SCAN, "$(SCAN)")
}

record(bo, "$(P)BoUInt32D")
{
   field(PINI, "$(PINI)")
   field(DTYP, "asynUInt32Digital")
   field(OUT,  "@asynMask($(PORT),$(ADDR),0x1, $(TIMEOUT))BINARY_UINT32D_VALUE")
   field(ZNAM, "Zero")
   field(ONAM, "One")
}

record(bo, "$(P)BoUInt32DRB")
{
   field(PINI, "$(PINI)")
   field(DTYP, "asynUInt32Digital")
   field(OUT,  "@asynMask($(PORT),$(ADDR),0x1, $(TIMEOUT))BINARY_UINT32D_VALUE")
   field(ZNAM, "Zero")
   field(ONAM, "One")
   info(asyn:READBACK,"1")
}

record(bi, "$(P)BiUInt32D")
{
   field(DTYP, "asynUInt32Digital")
   field(INP,  "@asynMask($(PORT),$(ADDR),0x1, $(TIMEOUT))BINARY_UINT32D_VALUE")
   field(ZNAM, "Zero")
   field(ONAM, "One")
   field(SCAN, "$(SCAN)")
}

record(mbbo, "$(P)MbboUInt32D")
{
   field(PINI, "$(PINI)")
   field(DTYP, "asynUInt32Digital")
   field(OUT,  "@asynMask($(PORT),$(ADDR),0xF, $(TIMEOUT))MULTIBIT_UINT32D_VALUE")
   field(ZRST, "State 0")
   field(ZRVL, "1")
   field(ONST, "State 2")
   field(ONVL, "2")
   field(TWST, "State 3")
   field(TWVL, "3")
}

record(mbbo, "$(P)MbboUInt32DRB")
{
   field(PINI, "$(PINI)")
   field(DTYP, "asynUInt32Digital")
   field(OUT,  "@asynMask($(PORT),$(ADDR),0xF, $(TIMEOUT))MULTIBIT_UINT32D_VALUE")
   field(ZRST, "State 0")
   field(ZRVL, "1")
   field(ONST, "State 2")
   field(ONVL, "2")
   field(TWST, "State 3")
   field(TWVL, "3")
   info(asyn:READBACK,"1")
}

record(mbbi, "$(P)MbbiUInt32D")
{
   field(DTYP, "asynUInt32Digital")
   field(INP,  "@asynMask($(PORT),$(ADDR),0xF, $(TIMEOUT))MULTIBIT_UINT32D_VALUE")
   field(ZRST, "State 0")
   field(ZRVL, "1")
   field(ONST, "State 2")
   field(ONVL, "2")
   field(TWST, "State 3")
   field(TWVL, "3")
   field(SCAN, "$(SCAN)")
}

record(mbboDirect, "$(P)MbboDUInt32D")
{
   field(PINI, "$(PINI)")
   field(DTYP, "asynUInt32Digital")
   field(OUT,  "@asynMask($(PORT),$(ADDR),0xF, $(TIMEOUT))MULTIBIT_UINT32D_VALUE")
}

record(mbboDirect, "$(P)MbboDUInt32DRB")
{
   field(PINI, "$(PINI)")
   field(DTYP, "asynUInt32Digital")
   field(OUT,  "@asynMask($(PORT),$(ADDR),0xF, $(TIMEOUT))MULTIBIT_UINT32D_VALUE")
   info(asyn:READBACK,"1")
}

record(mbbiDirect, "$(P)MbbiDUInt32D")
{
   field(DTYP, "asynUInt32Digital")
   field(INP,  "@asynMask($(PORT),$(ADDR),0xF, $(TIMEOUT))MULTIBIT_UINT32D_VALUE")
   field(SCAN, "$(SCAN)")
}


###################################################################
#  Records that use devAsynFloat64                                #
###################################################################

record(ao, "$(P)AoFloat64")
{
   field(PINI, "$(PINI)")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FLOAT64_VALUE")
   field(PREC, "1")
}

record(ao, "$(P)AoFloat64RB")
{
   field(PINI, "$(PINI)")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FLOAT64_VALUE")
   field(PREC, "1")
   info(asyn:READBACK,"1")
}

record(ai, "$(P)AiFloat64")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FLOAT64_VALUE")
   field(PREC, "1")
   field(SCAN, "$(SCAN)")
}
