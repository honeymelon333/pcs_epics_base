# CONFIG.Common.win32-x86-cygwin
#
# Revision-Id: jba@aps.anl.gov-20150226192656-o6l6f6v5eh870hjn
# This file is maintained by the build community.
#
# Definitions for cygwin-x86 target builds
# Sites may override these definitions in CONFIG_SITE.Common.win32-x86-cygwin
#-------------------------------------------------------

# Include definitions common to all Unix targets
include $(CONFIG)/os/CONFIG.Common.UnixCommon

OS_CLASS = WIN32
ARCH_CLASS = x86

#  Definitions used when COMMANDLINE_LIBRARY is READLINE
LDLIBS_READLINE = -lreadline -lcurses

POSIX_CPPFLAGS = -D_POSIX_THREADS -D_POSIX_TIMERS
#POSIX_CPPFLAGS += -D_POSIX_SOURCE
POSIX_LDLIBS += -lpthread

ARCH_DEP_CFLAGS += -m32
ARCH_DEP_LDFLAGS += -m32

# With no-cygwin option:
#	compiler defines _X86_ 1
#	compiler defines __MSVCRT__ 1
#	compiler defines __MINGW32__ 1
#	compiler defines __WIN32 1
#	compiler defines __WIN32__ 1
#	compiler defines _WIN32 1
#	compiler defines WIN32 1
#	compiler defines WINNT 1
#       compiler defines __GNUC__ 3
#	compiler does not define  __unix __unix__ unix
#	compiler does not define  __CYGWIN__ __CYGWIN32__

OP_SYS_CPPFLAGS = -mno-cygwin
OP_SYS_LDFLAGS += -mno-cygwin
OP_SYS_LDLIBS = -lws2_32 -ladvapi32 -luser32 -lkernel32 -lwinmm

EXE=.exe

VISC_DLL_NO = -DEPICS_DLL_NO
VISC_DLL_YES =
VISC_DLL = $(VISC_DLL_$(SHARED_LIBRARIES))
STATIC_CFLAGS_YES= $(VISC_DLL)
STATIC_CFLAGS_NO=  $(VISC_DLL) -D_DLL
STATIC_CXXFLAGS_YES= $(VISC_DLL)
STATIC_CXXFLAGS_NO=  $(VISC_DLL) -D_DLL

#	adjust names of libraries to build
#
#	But: if there are no objects LIBRARY_LD_OBJS to include
#	in this library (may be for e.g. base/src/libCompat
#	on some archs), don't define (and build) any library!
SHRLIB_PREFIX =
SHRLIB_SUFFIX_BASE = .dll
SHRLIB_SUFFIX = $(SHRLIB_SUFFIX_BASE)
SHRLIBNAME_YES = $(BUILD_LIBRARY:%=%$(SHRLIB_SUFFIX))
LOADABLE_SHRLIB_PREFIX =
LOADABLE_SHRLIB_SUFFIX = $(SHRLIB_SUFFIX_BASE)
LOADABLE_SHRLIBNAME = $(LOADABLE_BUILD_LIBRARY:%=%$(LOADABLE_SHRLIB_SUFFIX))

#
# When SHARED_LIBRARIES is YES we are building a DLL link library 
# and when SHARED_LIBRARIES is NO we are building an object library
#
LIB_PREFIX=
LIB_SUFFIX=.lib
DLL_LINK_LIBNAME_YES = $(BUILD_LIBRARY:%=%$(LIB_SUFFIX))
DLL_LINK_LIBNAME = $(DLL_LINK_LIBNAME_$(SHARED_LIBRARIES))
LIBNAME_NO = $(BUILD_LIBRARY:%=%$(LIB_SUFFIX))
LIBNAME = $(LIBNAME_$(SHARED_LIBRARIES))

#	dll install location
INSTALL_SHRLIB = $(INSTALL_BIN)

